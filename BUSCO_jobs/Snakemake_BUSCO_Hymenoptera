import pandas as pd 

#Commande Ã  lancer : 
#nohup snakemake -j 8000  -s Snakemake_BUSCO_Hymenoptera_diptera -n --cluster "sbatch -J {params.name} -p normal --cpus-per-task  {params.threads}  -o {params.out} -e {params.err} -t {params.time}  " &> nohup_Snakemake_BUSCO_hymenoptera.out & 

#Your softs 
BUSCO="/beegfs/home/soukkal/Tools/BUSCO/busco/bin/busco"

#Your paths 
Genomes_paths="/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/genomes/"
Output_Stat_dir="/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/results/Stat_Results/" 
BUSCO_logs_dir="/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/results/Stat_Results/BUSCO_LOGS2/"

#Your BUSCO parameters 
Lineages="hymenoptera_odb10"
Mode="genome"

Genome_IDS_table=pd.read_csv("/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/Access_num.txt",header=None)
list_Genome_IDs=list(Genome_IDS_table[0])

rule all:
  input:
        expand(Output_Stat_dir+"{Genome_ID}/BUSCO_results2/run_hymenoptera_odb10/full_table.tsv", Genome_ID = list_Genome_IDs)


#Run BUSCO analysis: 
rule BUSCO:
  params:
     threads="20",
     time="10:00:00",
     name="BUSCO_run_{Genome_ID}",
     out=BUSCO_logs_dir+"BUSCO_job_{Genome_ID}.out",
     err=BUSCO_logs_dir+"BUSCO_job_{Genome_ID}.error",
     lineage=Lineages,
     mode=Mode
  input:
     Genome_assembly= Genomes_paths+"{Genome_ID}.fna"
  output: 
     BUSCO_full_table_result=Output_Stat_dir+"{Genome_ID}/BUSCO_results2/run_hymenoptera_odb10/full_table.tsv"
  shell:
     """
     cd {Output_Stat_dir}{wildcards.Genome_ID}/
     /beegfs/data/soft/singularity-3.7.2/bin/singularity exec --bind /beegfs/:/beegfs/ /beegfs/data/soukkal/TOOLS/BUSCO.sif busco -i {input.Genome_assembly}  -l {params.lineage} -m {params.mode} -o BUSCO_results -c 3 -f
     """
