#Commande : 
#nohup snakemake -j 200 -s Snakemake_ET_search_Hymeno -n --cluster "sbatch -J {params.name} -p normal --cpus-per-task  {params.threads} -o {params.out} -e {params.err} --constraint=haswell --exclude=pbil-deb27 " &> nohup_Snakemake_ET_search_Hymeno.out &

import pandas as pd
import re 
import os

#Your softs
mmseqs2="/beegfs/data/soukkal/TOOLS/mmseqs/bin/mmseqs" #(version 5daca424b162cc5fdf0b9cd151aebed86975cbf6)

#Your paths 
Genomes_paths="/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/genomes/"
Output_dir="/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/results/Environment_results/ET/" 
DB_dir="/beegfs/data/soukkal/StageM2/Databases/"

Genome_IDS_table=pd.read_csv("/beegfs/data/soukkal/StageM2/Hymenoptera_genomes/Access_num.txt",header=None)
list_Genome_IDs=list(Genome_IDS_table[0])

#This rule contains all the expected output from all your rules within the snakefile 
rule all:
	input:
		DB_dir+"RepeatPeps", 
		expand(Output_dir+"{Genome_ID}/result_mmseqs2.m8", Genome_ID = list_Genome_IDs)

#First create the TE db : 
rule Create_TE_db:
	params:
		threads="1",
		time="00:10:00",
		name="CreateDB",
		mem="2000M",
		out=Output_dir+"CreateDB.out",
		err=Output_dir+"CreateDB.error"
	input:
		DB="/beegfs/data/bguinet/these/Repeat_env_analysis2/RepeatPeps.faa"
	output:
		mmseqs_DB=DB_dir+"RepeatPeps"
	shell:
		"""
		{mmseqs2} createdb {input.DB} {output.mmseqs_DB}
		"""

#Then run the BlastX (Mmseqs2) with Genomes as queries and RepeatPeps as database 
rule Homology_analysis:
	params:
		threads="20",
		time="04:00:00",
		mem="5G", 
		name="Mmseqs2_{Genome_ID}",
		out=Output_dir+"{Genome_ID}_Mmseqs2_ET_search.out",
		err=Output_dir+"{Genome_ID}_Mmseqs2_ET_search.error"
	input:
		ETDB=DB_dir+"RepeatPeps", 
		Genomedb=Genomes_paths+"{Genome_ID}.fna"
	output:
		out=Output_dir+"{Genome_ID}/result_mmseqs2.m8"
	shell:
		"""
		#Create a directory where the BlastX results will be written 
		mkdir -p {Output_dir}{wildcards.Genome_ID}/
		#Create the query database (for each query genome/sequence)
		{mmseqs2} createdb {input.Genomedb} {Output_dir}{wildcards.Genome_ID}/{wildcards.Genome_ID}_mmseqs2_db
		#Run Mmseqs2 search (BlastX equivalent, homology search between query and db)
		{mmseqs2} search {Output_dir}{wildcards.Genome_ID}/{wildcards.Genome_ID}_mmseqs2_db {input.ETDB} {Output_dir}{wildcards.Genome_ID}/result_mmseqs2 {Output_dir}{wildcards.Genome_ID}/tpm -a -s 7.5 -e 0.01 --threads 20 --remove-tmp-files
		#From the previous step you get one result file per thread, the next step will format the result column and also put together all the results in one file: 
		{mmseqs2} convertalis --format-output 'query,qlen,tlen,target,pident,alnlen,mismatch,gapopen,qstart,qend,tstart,tend,evalue,bits,qaln,tcov' {Output_dir}{wildcards.Genome_ID}/{wildcards.Genome_ID}_mmseqs2_db {input.ETDB} {Output_dir}{wildcards.Genome_ID}/result_mmseqs2 {output.out}
		"""

